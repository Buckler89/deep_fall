
--logging
--search-strategy		random
--rnd-exp-number		40
#--config-file

--score-path			score
--script-path			scripts
--trainset-list 		["trainset.lst"]
--case 				case6
--test-list-names 		["testset_1.lst","testset_2.lst","testset_3.lst","testset_4.lst"]
--dev-list-names 		["devset_1.lst","devset_2.lst","devset_3.lst","devset_4.lst"]
--input-type 			spectrograms

--cnn-input-shape 		[1,129,197]
--conv-layers-numb		[1,2,3]			# pick one of v[.]

# set_1 = [square, +cols, +rows, any]
# set_2 = [decrease, encrease, equal, any]

--kernel-number-type		decrease		# one of set_2
--kernels-number		[8,16]          	# number from v[0] and v[1]
--kernel-type 			square,equal,equal	# one combination set_1,set_2,set_2
--kernel-shape 		 	[1,7,1,7]		# rows from v[0] and v[1], cols from v[2] and v[3]

--max-pool-type 		square,equal,equal	# one combination set_1,set_2,set_2
--max-pool-shape		[1,3,1,3]		# rows from v[0] and v[1], cols from v[2] and v[3]

--strides-type			square,equal,equal	# one combination set_1,set_2,set_2
--strides			[1,2,1,2]		# rows from v[0] and v[1], cols from v[2] and v[3]

--pool-type			["all","only_end"] 	# one or more of [all, only_end]
--cnn-init			["glorot_uniform"]
--cnn-conv-activation		["tanh"]
--cnn-dense-activation		["tanh"]

--border-mode			["same"] 		# pick one of v[.]

# --w-reg
# --b-reg
# --act-reg
# --w-constr
# --b-constr

#--dense-layers-numb=x -> (x*2)+1 lv
--dense-layers-numb		[0,2]			# number from v[0] and v[1]
--dense-shapes			[32,64]			# number from v[0] and v[1]
--dense-shape-type		any     		# one of [decrease encrease equal any]

--fit-net
--epoch				50
--shuffle			[True,False]		# one of [True,False]
--bias				[True,False]		# one of [True,False]
--batch-size			[64,128]		# number from v[0] and v[1]
--optimizer			["adadelta"]		# one of v[.]
--loss				["mse"]			# one of v[.]





